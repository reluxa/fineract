name: Fineract Build & Test - Run Integration tests on the First day of the Month
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        hour: [0, 4, 8, 12, 16, 20, 24]
    runs-on: ubuntu-20.04

    env:
        TZ: Asia/Kolkata
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
    steps:
      - name: Generate last day of the month
        run: |
          DATE=`date -d "$(date +%Y-%m-01) +1 month -1 day + ${{ matrix.hour }} hours" "+%s"`
          echo "System clock will be set back to the last day of the current month: `date -d @$DATE`"
          echo "SYSTEM_DATE=$DATE" >> "$GITHUB_ENV"
      - name: Start Postgres
        run: |
          docker run --cap-add SYS_TIME --name postgresql -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=postgres --health-cmd="pg_isready -q -d postgres -U root" --health-interval=5s --health-timeout=2s --health-retries=3 -d postgres:15.3
          docker exec postgresql date -s @${{ env.SYSTEM_DATE }}
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # tag=v3
      - name: Verify PostgreSQL connection
        run: |
            while ! pg_isready -d postgres -U root -h 127.0.0.1 -p 5432 ; do
                sleep 1
            done
      - name: Start LocalStack
        env:
          AWS_ENDPOINT_URL: http://localhost:4566
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
          AWS_REGION: us-east-1
        run: |
          docker run -d --name localstack --cap-add SYS_TIME -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack:2.1
          sleep 10
          docker exec localstack date -s @${{ env.SYSTEM_DATE }}
          docker exec localstack awslocal s3api create-bucket --bucket fineract-reports
          echo "LocalStack initialization complete"
      - name: Build & Test
        env:
          AWS_ENDPOINT_URL: http://localhost:4566
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
          AWS_REGION: us-east-1
          FINERACT_REPORT_EXPORT_S3_ENABLED: true
          FINERACT_REPORT_EXPORT_S3_BUCKET_NAME: fineract-reports
        run: |
          docker run --cap-add SYS_TIME -v /home/runner/work/fineract/fineract:/home/runner/work/fineract/fineract -e TZ=Asia/Kolkata --network host openjdk:17-alpine sh -c "date -s @${{ env.SYSTEM_DATE }} && cd /home/runner/work/fineract/fineract && ./gradlew --no-daemon --console=plain createPGDB -PdbName=fineract_tenants && ./gradlew --no-daemon --console=plain createPGDB -PdbName=fineract_default"
          docker run --cap-add SYS_TIME -v /home/runner/work/fineract/fineract:/home/runner/work/fineract/fineract -e TZ=Asia/Kolkata --network host openjdk:17-alpine sh -c "date -s @${{ env.SYSTEM_DATE }} && cd /home/runner/work/fineract/fineract && ./gradlew --no-daemon --console=plain bootJar :integration-tests:test -PdbType=postgresql"
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3
        with:
          name: test-results
          path: |
            integration-tests/build/reports/
      - name: Archive server logs
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3
        with:
          name: server-logs
          path: |
            integration-tests/build/cargo/
